/* define primary colours to use
for the layout

-- means global follow by variable name eg.
--color-primary
*/

/* 
STEP 1:
SET UP TYPOGRAPHY
USE 'MOBILE FIRST' APPROACH WHEN STYLING
THEN ADAPT FOR MONITOR SCREEN
-------
- global variables for CSS color
- font size for body headings and para
- line height in the body
*/

/*universal selector to set box sizing to the border box
this is for the button as the block element button with
anchor <a> will be longer width is 100% due to the 
padding: 2rem 3rem in .btn
*/
*,
*::after,
*::before{
    box-sizing: border-box;
}

html{
    font-size: 62.5%; /*1 rem = 10px when font-size: 62.5%*/
}

:root{

    --color-primary:#2584ff;
    --color-secondary: #00d9ff;
    --color-accent :#ff3400;
    --color-headings: #1b0760;
    --color-body: #918ca4;
    --color-body-darker:#5c5577;
    --color-border: #ccc;
    --border-radius: 30px;

}

body{
    font-family: Inter, Arial, Helvetica, sans-serif;
    font-size: 2.4rem;
    line-height: 1.5;
    color:var(--color-body); /*use the global var of color*/
}


h1, h2, h3{
    color: var(--color-headings);
    margin-bottom: 1rem; 
}

h1{
    font-size: 7rem; 
}

h2{
    font-size: 4rem; /*1 rem = 10px when font-size: 62.5%*/
}

h3{
    font-size: 3rem; /*1 rem = 10px when font-size: 62.5%*/

}

p{
    margin-top: 0;
}


/* 
AFTER STYLING 'MOBILE FIRST' APPROACH,
USE MEDIA QUERIES FOR REGULAR MONITOR SCREEN 
*/

/* standard to use 1024px for min-width */
@media screen and (min-width: 1024px) {
    body{

        font-size: 1.8rem;
    }

    h1{
        font-size: 8rem;
    }

    h2{
        font-size: 4rem;
    }

    h3{
        font-size: 2.4rem;
    }
    
}

/* STEP 2:DESIGN THE LINK ELEMENTS */

/* set all links to none*/

a{
    text-decoration: none;
}

.link-arrow{
    color:var(--color-accent);
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: bold;
}


/*use after pseudo element selector ::after to insert arrow*/

.link-arrow::after{
    content: '-->';
    margin-left: 5px;
    /*include transition on margin for smoother effect.
    transition can takes transformation or element, in this case
    it takes 'margin' and give it a smoother transition
    */
    transition: margin 0.15s;
}

/*use after pseudo element selector ::after for hover
effect on the arrow. left margin will move from 5px to 10px 
at hover*/

.link-arrow:hover::after{
    margin-left: 10px;
}

/* for large screen, set arrow to smaller font size, as the
one above is for mobile*/
@media screen and (min-width:1024px) {
    .link-arrow{
        font-size: 1.5rem;
    }
    
}

/*STEP 3 DESIGN BADGES*/

.badge{
    border-radius: 20px; 
    font-size: 2rem;
    font-weight: 600;
    padding:0.5rem 1.5rem 0.5rem 1.5rem; /*top right bottom left/*/
    white-space: nowrap; /*prevent badge to wrap to newline*/
}

/*use BEM naming convention: Block Element Modifier
use -- to sepearate a block or component from a modifier
in this case, '.badge' is block, modifier is '--primary'
*/

.badge--primary{
    background: var(--color-primary); /*set bg to the primary color*/
    color:#fff;

}

.badge--secondary{
    background: var(--color-secondary);
    color: #fff;
}

/* create a separate skin from structure*/
.badge--small{
    font-size: 1.6rem;
}

/* for large screen, set badge to smaller font size, as the
one above is for mobile*/
@media screen and (min-width:1024px) {
    .badge{
        font-size: 1.5rem;
    }

    .badge--small{
        font-size: 1.2rem;
    }

}

/*STEP 4 DESIGN LISTS*/

/* for horizontal list (inline)*/
.list{
    list-style: none;
    padding-left: 0;
    color: var(--color-headings);
}

.list--inline .list__item{
    display: inline-block;
    margin-right: 2rem;
}


/* for vertical list (block)*/
.list--tick{
    /* to use tick as bullet point*/
    list-style-image: url(../images/tick.svg);
    padding-left: 3rem; /*to see the tick as bullet point*/
}

/* '.list--tick .list__item' is to add 0.5rem padding
for the 'list-item' of the 'list--tick'; without 'list-tick'
in front, all '.list__item' will apply 0.5rem paading to all
items that has a class of '.list_item'*/
.list--tick .list__item{
    padding-left: 0.5rem;
    margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
    .list--tick .list__item{
        padding-left: 0;
    }
}

/*STEP 5 DESIGN ICONS*/

.icon{
    width: 40px;
    height: 40px;
}

/*create separate skin for wordpress icon
change the color of icons to blue
*/

.icon--primary{
    fill:var(--color-primary)
}

/*icon is inline element,width and height as no effect 
on inline elements. so need to  set display
to  inline-block/flex in order to make a circle 
icon*/

.icon-container{
    background: #f3f9fa;
    width: 64px;
    height: 64px;
    border-radius: 100%;
    display: inline-flex; /*use inline-flex, instead of block to centralise the circle*/
    justify-content: center;/*align horizontal axis*/
    align-items: center; /*align vertical axis*/

}

/*STEP 6 DESIGN BUTTONS*/

.btn{
    border-radius: 40px;
    border:0;
    cursor: pointer;
    font-size: 1.8rem;
    font-weight: 600;
    margin: 2rem 0; /*horizontal and vertical margin: imagine 2rem horizontally is to placed spaces between lines*/
    padding: 2rem 3rem;
    text-align: center;
    text-transform: uppercase;
    white-space: nowrap;

}

.btn--primary{
    background: var(--color-primary);
    color: #fff;
}

.btn--primary:hover{
    background: #3a8ffd;
}

.btn--secondary{
    background-color: var(--color-secondary);
    color: #fff;
}

.btn--secondary:hover{
    background: #00c8eb;
}

.btn--accent{
    background: var(--color-accent);
    color: #fff;
}

.btn--accent:hover{
    background: #ec3000;
}


.btn--outline{
    background: #fff;
    color: var(--color-headings);
    border: 2px solid var(--color-headings);
}


.btn--outline:hover{
    background: var(--color-headings);/*reverse the color of white and text color*/
    color: #fff;
}
.btn--block{
    width: 100%;
    display: inline-block;
}



@media screen and (min-width:1024px) {
    .btn{
        font-size: 1.5rem;
    }
    
}

/*STEP 7 DESIGN INPUT COMPONENTS*/

.input{
    border-radius: var(--border-radius);
    border: solid 1px var(--color-border);
    color:var(--color-headings);
    font-size: 2rem;
    outline: 0; /*remove default border when hover*/
    padding: 1.5rem 3.5rem;
}

/*change font size and color of the placeholder
- use pseudo class selector
*/
::placeholder{
    color: #cdcbd7;
}

/*STEP 8 DESIGN INPUT GROUPS*/
/*group 'input-group' with button,
- this will lay an outer border on 
<button class="btn btn--accent">Search</button>*/

.input-group{
    /*go back to ::root to define global border color to
    --color-border: #ccc
    so that we don't have to spell border color in each
    component.

    go back to ::root to define global border radius to
    --border-radius: 30px
    so that we don't have to spell border radius in each
    component.
    */
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);

    /*set display: flex to move the search button to the
    right and have the input component to take up all the 
    available space*/
    display: flex;

}

/*use nesting: (ie.the input component is an input group)
so that the inner input component:
<input
				type="text"
				class="input"
				placeholder="Enter domain name here..."
			/>
will not have a border. Else there will be 2 borders.
*/
.input-group .input{
    border: 0;
    /*input text space will take up all the available space*/
    flex-grow: 1;
    /*inspect computed layout of input text in browser,
    there is a 43.75 padding space between button and input
    text, using padding to reduce space */
    padding: 1.5rem 1rem;
 
}

/*to address the margin between btn and input component
inspect the computed layout of btn in browser
(it shows 25px) so use nesting to change margin:4px*/
.input-group .btn{
    margin: 4px;
}

@media screen and (min-width:1024px) {

    .input{
        font-size: 1.5rem;
    }
}



/*STEP 9 DESIGN CARDS*/

/*the card should be fluid so the width 
should be based on the container*/
.card{
    border-radius: 7px;
    /*0 offset for horizontal and vertical 
    20px for shadow, 10px for shadpw spread
    */
    box-shadow: 0 0 20px 10px #f3f3f3;   
    /*so that background color of the header does overflow*/
    overflow: hidden; 
}

/*apply padding to the body and card (TAKE NOTE OF COMMA)*/
.card__header, .card__body{
    padding: 2rem 3rem;
}

/*apply primary color to the header inside card secondary class*/
.card--primary .card__header{
    background: var(--color-primary);
    color: white;

}

/*apply secondary color to the header inside card secondary class*/
.card--secondary .card__header{
    background: var(--color-secondary);
    color: white;
    
}

/*this brings up the badge background color
on the STEP 10 DESIGN PLAN, as the badge color is lost
to the background of card
*/
.card--secondary .badge--secondary{
    background: #02cdf1;
}

/*STEP 10 DESIGN PLAN*/
.plan__name{
    color:#fff;
    margin: 0;
    font-weight: 500;
    font-size: 2.4rem;
}

.plan__price{
    font-size: 6rem ;
}

.plan__billing-cycle{
    font-size: 2.4rem;
    font-weight: 300;
    opacity: 0.8;
    margin-right: 1rem;
}

.plan__description{
    display: inline-block;
    font-size: 2rem;
    font-weight: 300;
    margin-top: 1rem;
    letter-spacing: 1px;
    display: block;
}

/* give spacing and margin to the list inside div class='plan'*/
.plan .list__item{
    margin-bottom: 2rem;
    letter-spacing: 0.05rem;
}


/*11 DESIGN POPULAR BADGE*/

/*add pseudo selector to add popular badge (svg)
to reduce creating image element in html.
<img src="images/popular.svg" alt=""/>
- call this selector '.plan--popular'
- use ::before (pseudo selector)
- to move popular badge to the right set position: absolute
- put card__header (the parent) to position: relative 
*/

.plan--popular .card__header{
    position: relative;
}

.plan--popular .card__header::before{
    content: url(../images/popular.svg);
    width: 40px;
    display: inline-block;
    position: absolute;
    top:-6px; /*offset the badge at the top*/
    right:5%;/*offset the badge to right*/
}



@media screen and (min-width:1024px) {
    .plan__name{
        font-size: 1.4rem;
    } 

    .plan__price{
        font-size: 5rem;
    }

    .plan__billing-cycle{
        font-size: 1.6rem;
    }
    
    .plan__description{
        font-size: 1.7rem;
    }
}

/*STEP 12 DESIGN MEDIA COMPONENTS*/
/*after HTML setup:
- lay the text beside the icon using flex

*/

.media{
    display: flex;
}

/* there is a 30px margin from inspection of
the browser at the title.
set margin-top: 0 to align icon with header */
.media__title{
    margin-top: 0;
    
}

.media__body{
    margin: 0 2rem;
}

.media__image{
    margin-top: 1rem;
}

/*STEP 13 DESIGN QUOTES COMPONENTS-*/

.quote{
    font-size: 3rem;
    font-style: italic;
    color: var(--color-body-darker);
    line-height: 1.3;
}

/*create a pseudo class selector to insert
open and close quote for re-usability*/
.quote__text::before{
    content: open-quote;

}
.quote__text::after{
    content: close-quote;
}

.quote__author{
    font-style: normal;
    font-size: 3rem;
    font-weight: 500;
    margin-bottom: 0;
}

.quote__organisation{
    color: var(--color-headings);
    opacity: 0.4;
    font-size:2rem;
    font-style: normal;
}

.quote__line{
    position: relative;
    bottom: 10px;
}

@media screen and (min-width:1024px) {
    .quote{
        font-size: 1.5rem;
    }

    .quote__author{
        font-size: 2.4rem;
    }

    .quote__organisation{
        font-size: 1.6rem;
    }

}