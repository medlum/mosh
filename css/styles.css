/* define primary colours to use
for the layout

-- means global follow by variable name eg.
--color-primary
*/

/* 
STEP 1:
SET UP TYPOGRAPHY
USE 'MOBILE FIRST' APPROACH WHEN STYLING
THEN ADAPT FOR MONITOR SCREEN
-------
- global variables for CSS color
- font size for body headings and para
- line height in the body
*/

/*universal selector to set box sizing to the border box
this is for the button as the block element button with
anchor <a> will be longer width is 100% due to the 
padding: 2rem 3rem in .btn
*/
*,
*::after,
*::before{
    box-sizing: border-box;
}

html{
    font-size: 62.5%; /*1 rem = 10px when font-size: 62.5%*/
}

:root{

    --color-primary:#2584ff;
    --color-secondary: #00d9ff;
    --color-accent :#ff3400;
    --color-headings: #1b0760;
    --color-body: #918ca4;
    --color-body-darker:#5c5577;
    --color-border: #ccc;
    --border-radius: 30px;

}

body{
    font-family: Inter, Arial, Helvetica, sans-serif;
    font-size: 2.4rem;
    line-height: 1.5;
    color:var(--color-body); /*use the global var of color*/
}

/* container is for STEP18 DESIGN BLOCK

add a constrain to avoid re-sizing
use margin: 0 and auto, so that the design block can take up all space on
left and auto fill to right. 
0: vertical margin and auto: horizontal */
.container{
    max-width: 1140px;
    margin: 0 auto;

}


h1, h2, h3{
    color: var(--color-headings);
    margin-bottom: 1rem; 
}

h1{
    font-size: 7rem; 
}

h2{
    font-size: 4rem; /*1 rem = 10px when font-size: 62.5%*/
}

h3{
    font-size: 3rem; /*1 rem = 10px when font-size: 62.5%*/
    line-height: 1.1; /*this is for STEP 20 HERO*/

}

p{
    margin-top: 0;
}


/* 
AFTER STYLING 'MOBILE FIRST' APPROACH,
USE MEDIA QUERIES FOR REGULAR MONITOR SCREEN 
*/

/* standard to use 1024px for min-width */
@media screen and (min-width: 1024px) {
    body{

        font-size: 1.8rem;
    }

    h1{
        font-size: 8rem;
    }

    h2{
        font-size: 4rem;
    }

    h3{
        font-size: 2.4rem;
    }
    
}

/* STEP 2:DESIGN THE LINK ELEMENTS */

/* set all links to none*/

a{
    text-decoration: none;
}

.link-arrow{
    color:var(--color-accent);
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: bold;
}


/*use after pseudo element selector ::after to insert arrow*/

.link-arrow::after{
    content: '-->';
    margin-left: 5px;
    /*include transition on margin for smoother effect.
    transition can takes transformation or element, in this case
    it takes 'margin' and give it a smoother transition
    */
    transition: margin 0.15s;
}

/*use after pseudo element selector ::after for hover
effect on the arrow. left margin will move from 5px to 10px 
at hover*/

.link-arrow:hover::after{
    margin-left: 10px;
}

/* for large screen, set arrow to smaller font size, as the
one above is for mobile*/
@media screen and (min-width:1024px) {
    .link-arrow{
        font-size: 1.5rem;
    }
    
}

/*STEP 3 DESIGN BADGES*/

.badge{
    border-radius: 20px; 
    font-size: 2rem;
    font-weight: 600;
    padding:0.5rem 1.5rem 0.5rem 1.5rem; /*top right bottom left/*/
    white-space: nowrap; /*prevent badge to wrap to newline*/
}

/*use BEM naming convention: Block Element Modifier
use -- to sepearate a block or component from a modifier
in this case, '.badge' is block, modifier is '--primary'
*/

.badge--primary{
    background: var(--color-primary); /*set bg to the primary color*/
    color:#fff;

}

.badge--secondary{
    background: var(--color-secondary);
    color: #fff;
}

/* create a separate skin from structure*/
.badge--small{
    font-size: 1.6rem;
}

/* for large screen, set badge to smaller font size, as the
one above is for mobile*/
@media screen and (min-width:1024px) {
    .badge{
        font-size: 1.5rem;
    }

    .badge--small{
        font-size: 1.2rem;
    }

}

/*STEP 4 DESIGN LISTS*/

/* for horizontal list (inline)*/
.list{
    list-style: none;
    padding-left: 0;
    color: var(--color-headings);
}

.list--inline .list__item{
    display: inline-block;
    margin-right: 2rem;
}


/* for vertical list (block)*/
.list--tick{
    /* to use tick as bullet point*/
    list-style-image: url(../images/tick.svg);
    padding-left: 3rem; /*to see the tick as bullet point*/
}

/* '.list--tick .list__item' is to add 0.5rem padding
for the 'list-item' of the 'list--tick'; without 'list-tick'
in front, all '.list__item' will apply 0.5rem paading to all
items that has a class of '.list_item'*/
.list--tick .list__item{
    padding-left: 0.5rem;
    margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
    .list--tick .list__item{
        padding-left: 0;
    }
}

/*STEP 5 DESIGN ICONS*/

.icon{
    width: 40px;
    height: 40px;
}

/*create separate skin for wordpress icon
change the color of icons to blue
*/

.icon--primary{
    fill:var(--color-primary)
}

/*THIS IS PART OF STEP 15 OF TESTIMONIAL
FPR THE QUOTATION ICON*/
.icon--white{
    fill:#fff
}


/*THIS IS PART OF STEP 15 OF TESTIMONIAL
FPR THE QUOTATION ICON*/

.icon--small{
    width: 30x;
    height: 30px;
}

/*icon is inline element,width and height as no effect 
on inline elements. so need to  set display
to  inline-block/flex in order to make a circle 
icon*/

.icon-container{
    background: #f3f9fa;
    width: 64px;
    height: 64px;
    border-radius: 100%;
    display: inline-flex; /*use inline-flex, instead of block to centralise the circle*/
    justify-content: center;/*align horizontal axis*/
    align-items: center; /*align vertical axis*/

}

/*THIS IS PART OF STEP 15 OF TESTIMONIAL
WE SET A ACCENT COLOR FOR THE ICON USED AT THE TESTIMONIAL
THEN WE ADD A NEW CLASS TO <span class="icon-container">
SO IT BECOMES  <span class="icon-container icon-container--accent">*/
.icon-container--accent{
    background: var(--color-accent);
}



/*STEP 6 DESIGN BUTTONS*/

.btn{
    border-radius: 40px;
    border:0;
    cursor: pointer;
    font-size: 1.8rem;
    font-weight: 600;
    margin: 2rem 0; /*horizontal and vertical margin: imagine 2rem horizontally is to placed spaces between lines*/
    padding: 2rem 3rem;
    text-align: center;
    text-transform: uppercase;
    white-space: nowrap;

}

/*for icon in the search button
refer to step 21 DESIGN DOMAIN BLOCK under 
<button class="btn btn--accent">
				<svg class="icon icon--white">
					<use xlink:href="images/sprite.svg#search"></use>
				</svg>
				Search
			</button>
*/
.btn .icon{
    width: 2rem;
    height: 2rem;
    margin-right: 1rem;
    vertical-align: middle;
}
.btn--primary{
    background: var(--color-primary);
    color: #fff;
}

.btn--primary:hover{
    background: #3a8ffd;
}

.btn--secondary{
    background-color: var(--color-secondary);
    color: #fff;
}

.btn--secondary:hover{
    background: #00c8eb;
}

.btn--accent{
    background: var(--color-accent);
    color: #fff;
}

.btn--accent:hover{
    background: #ec3000;
}


.btn--outline{
    background: #fff;
    color: var(--color-headings);
    border: 2px solid var(--color-headings);
}


.btn--outline:hover{
    background: var(--color-headings);/*reverse the color of white and text color*/
    color: #fff;
}
.btn--block{
    width: 100%;
    display: inline-block;
}

/*THIS IS PART OF STEP 16 DESIGN CALLOUTS
to give the button on the callout some padding*/
.btn--stretched{
    padding-left: 6rem;
    padding-right: 6rem;

}

@media screen and (min-width:1024px) {
    .btn{
        font-size: 1.5rem;
    }
    
}

/*STEP 7 DESIGN INPUT COMPONENTS*/

.input{
    border-radius: var(--border-radius);
    border: solid 1px var(--color-border);
    color:var(--color-headings);
    font-size: 2rem;
    outline: 0; /*remove default border when hover*/
    padding: 1.5rem 3.5rem;
}

/*change font size and color of the placeholder
- use pseudo class selector
*/
::placeholder{
    color: #cdcbd7;
}

/*STEP 8 DESIGN INPUT GROUPS*/
/*group 'input-group' with button,
- this will lay an outer border on 
<button class="btn btn--accent">Search</button>*/

.input-group{
    /*go back to ::root to define global border color to
    --color-border: #ccc
    so that we don't have to spell border color in each
    component.

    go back to ::root to define global border radius to
    --border-radius: 30px
    so that we don't have to spell border radius in each
    component.
    */
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);

    /*set display: flex to move the search button to the
    right and have the input component to take up all the 
    available space*/
    display: flex;

}

/*use nesting: (ie.the input component is an input group)
so that the inner input component:
<input
				type="text"
				class="input"
				placeholder="Enter domain name here..."
			/>
will not have a border. Else there will be 2 borders.
*/
.input-group .input{
    border: 0;
    /*input text space will take up all the available space*/
    flex-grow: 1;
    /*inspect computed layout of input text in browser,
    there is a 43.75 padding space between button and input
    text, using padding to reduce space */
    padding: 1.5rem 2rem;
 
}

/*to address the margin between btn and input component
inspect the computed layout of btn in browser
(it shows 25px) so use nesting to change margin:4px*/
.input-group .btn{
    margin: 4px;
}

@media screen and (min-width:1024px) {

    .input{
        font-size: 1.5rem;
    }
}



/*STEP 9 DESIGN CARDS*/

/*the card should be fluid so the width 
should be based on the container*/
.card{
    border-radius: 7px;
    /*0 offset for horizontal and vertical 
    20px for shadow, 10px for shadpw spread
    */
    box-shadow: 0 0 20px 10px #f3f3f3;   
    /*so that background color of the header does overflow*/
    overflow: hidden; 
}

/*apply padding to the body and card (TAKE NOTE OF COMMA)*/
.card__header, .card__body{
    padding: 2rem 3rem;
}

/*apply primary color to the header inside card secondary class*/
.card--primary .card__header{
    background: var(--color-primary);
    color: white;

}

/*apply secondary color to the header inside card secondary class*/
.card--secondary .card__header{
    background: var(--color-secondary);
    color: white;
    
}

/*this brings up the badge background color
on the STEP 10 DESIGN PLAN, as the badge color is lost
to the background of card
*/
.card--secondary .badge--secondary{
    background: #02cdf1;
}

/*STEP 10 DESIGN PLAN*/
.plan__name{
    color:#fff;
    margin: 0;
    font-weight: 500;
    font-size: 2.4rem;
}

.plan__price{
    font-size: 6rem ;
}

.plan__billing-cycle{
    font-size: 2.4rem;
    font-weight: 300;
    opacity: 0.8;
    margin-right: 1rem;
}

.plan__description{
    display: inline-block;
    font-size: 2rem;
    font-weight: 300;
    margin-top: 1rem;
    letter-spacing: 1px;
    display: block;
}

/* give spacing and margin to the list inside div class='plan'*/
.plan .list__item{
    margin-bottom: 2rem;
    letter-spacing: 0.05rem;
}


/*11 DESIGN POPULAR BADGE*/

/*add pseudo selector to add popular badge (svg)
to reduce creating image element in html.
<img src="images/popular.svg" alt=""/>
- call this selector '.plan--popular'
- use ::before (pseudo selector)
- to move popular badge to the right set position: absolute
- put card__header (the parent) to position: relative 
*/

.plan--popular .card__header{
    position: relative;
}

.plan--popular .card__header::before{
    content: url(../images/popular.svg);
    width: 40px;
    display: inline-block;
    position: absolute;
    top:-6px; /*offset the badge at the top*/
    right:5%;/*offset the badge to right*/
}



@media screen and (min-width:1024px) {
    .plan__name{
        font-size: 1.4rem;
    } 

    .plan__price{
        font-size: 5rem;
    }

    .plan__billing-cycle{
        font-size: 1.6rem;
    }
    
    .plan__description{
        font-size: 1.7rem;
    }
}

/*STEP 12 DESIGN MEDIA COMPONENTS*/
/*after HTML setup:
- lay the text beside the icon using flex

*/

.media{
    display: flex;
}

/* there is a 30px margin from inspection of
the browser at the title.
set margin-top: 0 to align icon with header */
.media__title{
    margin-top: 0;
    
}

.media__body{
    margin: 0 2rem;
}

.media__image{
    margin-top: 1rem;
}

/*STEP 13 DESIGN QUOTES COMPONENTS-*/

.quote{
    font-size: 3rem;
    font-style: italic;
    color: var(--color-body-darker);
    line-height: 1.3;
}

/*create a pseudo class selector to insert
open and close quote for re-usability*/
.quote__text::before{
    content: open-quote;

}
.quote__text::after{
    content: close-quote;
}

.quote__author{
    font-style: normal;
    font-size: 3rem;
    font-weight: 500;
    margin-bottom: 0;
}

.quote__organisation{
    color: var(--color-headings);
    opacity: 0.4;
    font-size:2rem;
    font-style: normal;
}

.quote__line{
    position: relative;
    bottom: 10px;
}

@media screen and (min-width:1024px) {
    .quote{
        font-size: 1.5rem;
    }

    .quote__author{
        font-size: 2.4rem;
    }

    .quote__organisation{
        font-size: 1.6rem;
    }

}

/*STEP 14 DESIGN GRID*/

.grid{
    display: grid;
}

/*for tablet  display grids as 1 row 2cols
change to <div class="grid grid--1x2"> to test/*/

@media screen and (min-width:768px) {
    .grid--1x2{
        grid-template-columns: repeat(2, 1fr);
    }

}


/*for monritor display grids as 1 row 3cols
change to <div class="grid grid--1x3"> to test*/

@media screen and (min-width:1024px) {
    .grid--1x3{
        grid-template-columns: repeat(3, 1fr);
    }
    
}

/*STEP 15 DESIGN TESTIMONIAL*/

.testimonial{
    padding: 3rem;
}

/*set width:100% so it shares equal width length
with the 2nd col and also auto resize when the screen
size changes*/

/*as image is inside 'testimonial__img' container
use '>' to directly select the img inside the container.
'.testimonial__img >img' is direct try selector*/
.testimonial__img > img{
    width: 100%;
}

.testimonial__img{
    position: relative;
}

/*set icon to abs position to set it at the top right
side of the testimonial image*/

/*64 divide 2 = 32, due the icon.container width and height in step 5
-32px will place the icon 50:50 between the img*/
.testimonial__img > .icon-container{
    position: absolute;
    top: 3rem;
    right: -32px; 
}

/*define a new media query for testimonial as the font 
size seem too big for tablet screen (768px is standard for 
tablet screen)*/

/* .testimonial .quote { } means we target the quote of the testimonial
class

.testimonial .quote,
.testimonial .quote__author {} means we target 2 specific element

*/
@media screen and (min-width:768px) {
    .testimonial .quote,
    .testimonial .quote__author{
        font-size: 2.4rem;
    }
    /*target quote inside testimonial class
    to give a left margin for text and image to
    have a wider gap*/
    .testimonial .quote{
        margin-left: 6rem;
    }
}

/*STEP 16 DESIGN CALLOUTS*/

.callout{
    padding: 4rem;
    border-radius: 5px;
}

.callout--primary{
    background: var(--color-primary);
    color: #fff;
}

.callout__heading{
    color: #fff;
    margin-top: 0;
    font-size: 3rem;
}

/*default value for justify-contents and align-items
is 'stretch'*/
.callout .btn{
    justify-self: center; /*justify-self apply to the item of a grid*/
    align-self: center; /*align-self apply to the item of a grid*/
    
}

/*on mobile, the text of callout will be center*/
.callout__content{
    text-align: center;
}

/*set text conten to left when using tablet and above*/
@media screen and (min-width:768px) {

    /*this allow the text and button to adjust empty
    spaces more evenly, else there are alot of empty 
    space on button grid. the text will stretch accordingly*/
    .callout .grid--1x2{
        grid-template-columns: 1fr auto;
    }

    .callout__content{
        text-align: left;
    }
    /*so that button is closer to the text*/
    .btn{
        justify-self: start;
        margin:2rem;
    }
}


/*STEP 17 DESIGN COLLAPSIBLE*/
.collapsible__header{
    display: flex;
    /*
    put chevron icon to the right by
    - push space to the edges and add ppace between them
    */
    justify-content: space-between;

}

/*to remove the margin go <h2> item 1*/
.collapsible__heading{
    margin-top: 0;
    font-size: 3rem;
}

/*rotate chevron icon 90degree*/
.collapsible__chevron{
    transform: rotate(-90deg);
    transition: transform 0.3s;
}

/*hide the content
set max-height to zero, this will lead to overflow
set overflow to hidden, this will hide text at initial
state

*/
.collapsible__content{
    max-height: 0;
    overflow: hidden;
    /*
    'transition : all' will set all settings
    in this case, opacity and max-height
    use opacity for better transition, need to 
    set opacity:1 at:

    .collapsible--expanded .collapsible__content{}
}

    */
    transition: all 0.3s;
    opacity: 0;
}
/*
- create a another class collapsible--expanded in
<div class="collapsible collapsible--expanded">
- rotate chevron when the content is expanded
*/

.collapsible--expanded .collapsible__chevron{
    transform: rotate(0deg);

}

/*
text will expand upon click from js,
set max-height to 100vh to make the view area fluid.

*/
.collapsible--expanded .collapsible__content{
    max-height: 100vh;
    opacity: 1;
}

/*use js to script the expand and collapse state*/

/*STEP 18 DESIGN BLOCK*/

.block{
    /*custom property variable. this allow the reuse of the 
    property more dynamically, example reuse it at .block--skew-right */
    --padding-vertical: 6rem; 
    
    /*normal padding versus custom property variable
    padding: 6rem 2rem;
    */

    padding: var(--padding-vertical) 2rem;
    /*temporary property to see how the section flow*/
    /*border: solid 2px red; */
 
}

.block__header{
    text-align: center;
}

/*remove heading extra margin*/
.block__heading{
    margin-top: 0;
}

.block--dark{
    background: #000;
    color: #7b858b;
}

/*give the heading inside dark block a white header*/
.block--dark .block__heading{
    color: #fff;
}


.block--skew-right{
    /*padding gives more area between this and next section
    use calc() to add another 4 rem dynamically. as compared to
    hardcoding 'padding-bottom: 10rem');
    */
    
    padding-bottom: calc(var(--padding-vertical) + 4rem); 
    
    /*go to https://bennettfeely.com/clippy/ to create
a polygon
- select custom polygon and choose the 4 corners 
- copy and paste the clip path 
- apply it to the block--dark class
*/
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 80%);
}


.block--skew-left{
   
    padding-bottom: calc(var(--padding-vertical) + 4rem); 
    clip-path: polygon(0% 0%, 100% 0%, 100% 80%, 0% 100%);
}

.nav{
    background: #000;
    display: flex;
    justify-content:space-between;
    flex-wrap: wrap;
     /*create a padding not so close to the edges
     at the */
    padding:0 1rem; /*top-right*/
    align-items: center;/*menu button set to center*/
}

/*push the list below the icon
set width to 100% and enable flex-wrap in .nav*/
.nav__list{
    width: 100%;  
    margin: 0; 
}

.nav__item{
    padding: 0.5rem 2rem;
    border-bottom: 1px solid #222;
}

/*need direct child selector for <a>
cannot just include color in .nav__item*/
.nav__item > a{
    color: #d2d0db;
    transition: 0.3s;
}


.nav__item > a:hover{
    color: #fff;
}

/*create an extra class nav__toggler for hover effect on the button*/
.nav__toggler{
    opacity: 0.2;
    /*this is meant for the button to transit more smoothly
    when the button is expanded unger double class selector
    below
    */
    transition: 0.15s;
    cursor: pointer;

}

.nav__toggler:hover{
    color: #fff;

}


/*use a double class selector*/
/*this will set opacity of the button back to 
value of 1 when the list is expanded, 
so it looks brighter and apply box shadow too */
.nav.collapsible--expanded .nav__toggler{
    opacity: 1;
    box-shadow: 0 0 0 3px #666;
    border-radius: 5px;
}

/*a small hack to move the logo down, add a 
new class="nav__brand" in html under the anchor*/
.nav__brand{
    transform: translateY(8px);

}



/*for wide screen*/

@media screen and (min-width:768px) {
     /*don't display icon on larger screen*/
    .nav__toggler{
        display: none;

    }
    
    .nav__list{
        width: auto;
        display: flex; /*put the list horizontally*/
        font-size: 1.6rem;
        max-height: 100%;
        opacity: 1;

    }
    /*remove the border at wide screen*/
    .nav__item{
        border: 0;
    }
}

/*STEP 20 DESIGN A HERO COMPONENT*/

.hero{
    clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
}

/*setting img width to 100% to unenable right scrolling
in a browser*/
.hero__image{
    width: 100%;
}


.hero__tagline {
    font-size: 2rem;
    color: #b9c3cf;
    letter-spacing: 1px;
    margin: 2rem 0 5rem;
  }


@media screen and (min-width: 768px) {

    .hero__content {
      text-align: left;
      align-self: center;
    }
  }

    
  @media screen and (min-width: 1024px) {
    .hero {
      padding-top: 0;
    }
  }


  /* STEP 21 DESIGN DOMAIN BLOCK*/


.block-domain .input-group{
    box-shadow: 0 0 30px 20px #e6ebee;
    border: 0;
    margin: 4rem auto;
    max-width: 600px;
}


.block-domain__prices{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 6rem);
    font-size: 2rem;
    font-weight: 600;
    justify-items: center;
    max-width: 700px;
    margin: 0 auto;
}

@media screen and (min-width:768px) {
    
    .block-domain__prices{
        grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    }
}